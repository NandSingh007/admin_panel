{"version":3,"file":"static/js/9964.fad5f990.chunk.js","mappings":"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","sources":["webpack://@coreui/coreui-free-react-admin-template/./src/components/Account/css/Input.module.css?1ffb","components/Account/InputTeg.js","components/Account/Myprofile.js","../node_modules/@coreui/react/src/components/card/CCard.tsx","../node_modules/@coreui/react/src/components/grid/CCol.tsx","../node_modules/@coreui/react/src/components/grid/CRow.tsx","webpack://@coreui/coreui-free-react-admin-template/./src/components/Account/css/Designer.module.css?3d5d"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContainerInput\":\"Input_ContainerInput__kH-74\"};","import React from 'react';\r\nimport styles from '../Account/css/Input.module.css';\r\nconst InputTeg = ({ ...props }) => {\r\n    return (\r\n        <>\r\n            <div className={styles.ContainerInput}>\r\n                {/* Render label if it is provided */}\r\n                {/* {label && <label>{label}</label>} */}\r\n                <input type=\"text\" value={''} {...props} /> {/* Render input element */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InputTeg;\r\n","import React, { useState } from 'react';\r\nimport { CContainer, CRow, CCol, CCard } from '@coreui/react';\r\nimport '../Account/css/Myprofile.css';\r\nimport InputTeg from './InputTeg';\r\nimport styless from '../Account/css/Designer.module.css';\r\nimport img from '../../assets/images/react.jpg'\r\n\r\nconst Myprofile = () => {\r\n\r\n  const obj = {\r\n    Profile: \"Profile Detail\",\r\n    Kyc: \"Kyc Detail\",\r\n    Password: \"Password Setting\",\r\n    Logout: \"Logout\"\r\n  };\r\n\r\n  // const { cartitem3 } = useSelector((state) => state.add);\r\n  const [activeSectionKey, setActiveSectionKey] = useState(Object.keys(obj)[0]);\r\n  const [mge, setMge] = useState('');\r\n\r\n  const [storage, setStorage] = useState({\r\n    Pancard: \"\",\r\n    Gst: \"\",\r\n    Shop: \"\",\r\n    AdharCard: \"\",\r\n  });\r\n\r\n  const [storag2, setstorag2] = useState({\r\n    oldpassword: \"\",\r\n    newpassword: \"\",\r\n    confirmpassword: \"\",\r\n  });\r\n\r\n\r\n  const [storag4, setstorag4] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    number: \"\",\r\n    address: \"\",\r\n    image: \"\",\r\n    State: \"\",\r\n    City: \"\",\r\n    Pincode: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const handleImageChange = (e) => {\r\n    const name = e.target.name;\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      setstorag4({ ...storag4, [name]: reader.result });\r\n      setMge(reader.result);\r\n    };\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setstorag4({ ...storag4, [name]: value });\r\n  };\r\n  const handleInput1 = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setStorage({ ...storage, [name]: value });\r\n  };\r\n\r\n  const handleInput2 = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setstorag2({ ...storag2, [name]: value });\r\n  };\r\n\r\n  function submit1() {\r\n    console.log(storage)\r\n    // alert(\"please fill the form\");\r\n  }\r\n\r\n  function submit2() {\r\n    console.log(storag2)\r\n  }\r\n  const submit4 = event => {\r\n    event.preventDefault()\r\n    console.log(storag4)\r\n    // setActiveSectionKey(Object.keys(obj)[1]);\r\n    // alert(\"please fill the form\");\r\n  }\r\n\r\n  const Profile = (\r\n    <div className=\"row\">\r\n      <h2 className={styless.profile_title_heading}>Personal Information</h2>\r\n      <div className='col-md-12'>\r\n        {mge ? <div className={styless.mg}><img src={mge} alt=\"uploadedimage\" width=\"130px\" /></div> : <div className={styless.mg}><img src={img} alt=\"SelectImage\" /></div>}\r\n        <InputTeg\r\n          type='file'\r\n          name=\"image\"\r\n          onChange={handleImageChange}\r\n        />\r\n      </div>\r\n      <div className='col-md-12'>\r\n        {/* name input */}\r\n        <label className={styless.lb}>full name</label>\r\n        <InputTeg\r\n          placeholder=\"Enter Your Name\"\r\n          name=\"name\"\r\n          value={storag4.name}         // defult name\r\n          onChange={handleInput}        //  onchange predefined function \"HandelIput\"\r\n        />\r\n      </div>\r\n      <div className=\"col-md-12\">\r\n        <div className=\"row\">\r\n          <div className='col-md-6'>\r\n            {/* email input */}\r\n            <label className={styless.lb}>Email</label>\r\n            <InputTeg\r\n              name=\"email\"\r\n              placeholder=\"Enter Your Email\"\r\n              value={storag4.email}          // defult email\r\n              onChange={handleInput}          //  onchange predefined function \"HandelIput\"\r\n            />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            {/* number input */}\r\n            <label className={styless.lb}>Number</label>\r\n            <InputTeg\r\n              placeholder=\"Enter Your number\"\r\n              name=\"number\"\r\n              value={storag4.number}           // defult number\r\n              onChange={handleInput}           //  onchange predefined function \"HandelIput\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='col-md-12'>\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <label className={styless.lb}>State</label>\r\n            {/* linkdin input */}\r\n            <InputTeg\r\n              type=\"text\"\r\n              placeholder=\"Your State\"\r\n              name=\"State\"\r\n              value={storag4.State}          // defult inkdin\r\n              onChange={handleInput}           //  onchange predefined function \"HandelIput\"\r\n            />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            {/* github input */}\r\n            <label className={styless.lb}>City</label>\r\n            <InputTeg\r\n              type=\"text\"\r\n              name=\"City\"\r\n              value={storag4.City}\r\n              onChange={handleInput}\r\n              placeholder=\"Your City\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='col-md-12'>\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <label className={styless.lb}>Address</label>\r\n            {/* linkdin input */}\r\n            <InputTeg\r\n              placeholder=\"Enter Your Address\"\r\n              name=\"address\"\r\n              value={storag4.address}           // defult address\r\n              onChange={handleInput}           //  onchange predefined function \"HandelIput\"\r\n            />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            {/* github input */}\r\n            <label className={styless.lb}>Pincode</label>\r\n            <InputTeg\r\n              type=\"text\"\r\n              name=\"Pincode\"\r\n              value={storag4.Pincode}\r\n              onChange={handleInput}\r\n              placeholder=\"Your Pincode\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-md-12\">\r\n        {/* portfolio input */}\r\n        <label className={styless.lb}>Locked Amount</label>\r\n        <InputTeg\r\n          type=\"number\"\r\n          placeholder=\"Locked Amount\"\r\n          name=\"amount\"\r\n          value={storag4.amount}        // defult portfolio\r\n          onChange={handleInput}           //  onchange predefined function \"HandelIput\"\r\n        />\r\n      </div>\r\n      <div className='row btn_group'>\r\n        <button onClick={submit4} className={styless.btn1} >UpdateProfile</button>\r\n      </div>\r\n    </div>\r\n  )\r\n  // personal information end\r\n  // Kycrmation part start\r\n\r\n  const Kyc = (\r\n    <div className=\"row\">\r\n      <h2 className={styless.profile_title_heading}>Kyc Details</h2>\r\n      <div className='col-md-12'>\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <label className={styless.lb}>Shop name</label>\r\n            {/* Pancard input */}\r\n            <InputTeg\r\n              type=\"text\"\r\n              name=\"Shop\"\r\n              value={storage.Shop}      // defult Pancard\r\n              onChange={handleInput1}           //  onchange predefined function \"HandelIput1\"\r\n              placeholder=\"Enter Shop details\" />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            {/* title_personal input */}\r\n            <label className={styless.lb}>Gst Details</label>\r\n            <InputTeg\r\n              name=\"Gst\"\r\n              type=\"text\"\r\n              value={storage.Gst}         // defult Gst\r\n              onChange={handleInput1}           //  onchange predefined function \"HandelIput1\"\r\n              placeholder=\"Enter Gst Details\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='col-md-12'>\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            <label className={styless.lb}>Pancard Details</label>\r\n            {/* Pancard input */}\r\n            <InputTeg\r\n              type=\"text\"\r\n              name=\"Pancard\"\r\n              value={storage.Pancard}      // defult Pancard\r\n              onChange={handleInput1}           //  onchange predefined function \"HandelIput1\"\r\n              placeholder=\"Enter start date of work\" />\r\n          </div>\r\n          <div className='col-md-6'>\r\n            {/* title_personal input */}\r\n            <label className={styless.lb}>AdharCard Number</label>\r\n            <InputTeg\r\n              name=\"AdharCard\"\r\n              type=\"text\"\r\n              value={storage.AdharCard}         // defult Gst\r\n              onChange={handleInput1}           //  onchange predefined function \"HandelIput1\"\r\n              placeholder=\"Enter AdharCard Number\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row btn_group'>\r\n        <button onClick={submit1} className={styless.btn1} >UpdateKyc</button>\r\n      </div>\r\n    </div>\r\n  )\r\n  // Kycrmation part end\r\n\r\n  // oldpassword part starts\r\n  const Password = (\r\n    <div className='row'>\r\n      <h2 className={styless.profile_title_heading}>Password</h2>\r\n      <div className='col-md-12'>\r\n        {/* oldpassword input */}\r\n        <label className={styless.lb}>Old Password</label>\r\n        <InputTeg\r\n          name=\"oldpassword\"\r\n          type=\"password\"\r\n          value={storag2.oldpassword}        // defult oldpassword\r\n          onChange={handleInput2}          //  onchange predefined function \"HandelIput2\"\r\n          placeholder=\"Enter old password\"\r\n        />\r\n      </div>\r\n      <div className='col-md-12'>\r\n        {/* newpassword input */}\r\n        <label className={styless.lb}>New Paswword</label>\r\n        <InputTeg\r\n          name=\"newpassword\"\r\n          type=\"password\"\r\n          value={storag2.newpassword}      // defult newpassword\r\n          onChange={handleInput2}      //  onchange predefined function \"HandelIput2\"\r\n          placeholder=\"Enter New Paswword\"\r\n        />\r\n      </div>\r\n      <div className='col-md-12'>\r\n        {/* confirmpassword input */}\r\n        <label className={styless.lb}>Confirmed Password</label>\r\n        <InputTeg\r\n          name=\"confirmpassword\"\r\n          type=\"password\"\r\n          value={storag2.confirmpassword}      // defult confirmpassword\r\n          onChange={handleInput2}      //  onchange predefined function \"HandelIput2\"\r\n          placeholder=\"Enter Confirmed Password\"\r\n        />\r\n      </div>\r\n      <div className='row btn_group'>\r\n        <button className={styless.btn1} onClick={submit2} >UpdatePassword</button>\r\n      </div>\r\n    </div>\r\n  )\r\n  // oldpassword part end\r\n  //Logout part start\r\n  const Logout = (\r\n    <div className='row'>\r\n      <h2 className={styless.profile_title_heading}>Logout</h2>\r\n    </div>\r\n  )\r\n\r\n\r\n  const generateBody = () => {\r\n    switch (obj[activeSectionKey]) {\r\n      case obj.Profile: return Profile;\r\n      case obj.Kyc: return Kyc;\r\n      case obj.Password: return Password;\r\n      case obj.Logout: return Logout;\r\n      default: return null;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <CContainer>\r\n        <CRow>\r\n          <CCol xs={12} md={3}>\r\n            <CCard >\r\n              <ul className={styless.unorder_list}>\r\n                {Object.keys(obj)?.map((item) => (\r\n                  <li\r\n                    className={`${styless.section} ${activeSectionKey === item ? styless.activee : \"\"}`}\r\n                    key={item}\r\n                    onClick={() => setActiveSectionKey(item)}\r\n                  >\r\n                    {obj[item]}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </CCard>\r\n          </CCol>\r\n          <CCol xs={12} md={9} >\r\n            <CCard>\r\n              {generateBody()}\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Myprofile;\r\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { colorPropType } from '../../props'\nimport type { Colors } from '../../types'\n\nexport interface CCardProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Sets the color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | string\n   */\n  color?: Colors\n  /**\n   * Sets the text color context of the component to one of CoreUI’s themed colors.\n   *\n   * @type 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'dark' | 'light' | 'primary-emphasis' | 'secondary-emphasis' | 'success-emphasis' | 'danger-emphasis' | 'warning-emphasis' | 'info-emphasis' | 'light-emphasis' | 'body' | 'body-emphasis' | 'body-secondary' | 'body-tertiary' | 'black' | 'black-50' | 'white' | 'white-50' | string\n   */\n  textColor?: string\n}\n\nexport const CCard = forwardRef<HTMLDivElement, CCardProps>(\n  ({ children, className, color, textColor, ...rest }, ref) => {\n    return (\n      <div\n        className={classNames(\n          'card',\n          {\n            [`bg-${color}`]: color,\n            [`text-${textColor}`]: textColor,\n          },\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCCard.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: colorPropType,\n  textColor: PropTypes.string,\n}\n\nCCard.displayName = 'CCard'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\ntype Span = 'auto' | number | string | boolean | null\n\ntype BPObject = {\n  span?: Span\n  offset?: number | string | null\n  order?: 'first' | 'last' | number | string | null\n}\n\ntype Col = Span | BPObject\n\nexport interface CColProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The number of columns/offset/order on extra small devices (<576px).\n   *\n   * @type { 'auto' | number | string | boolean | { span: 'auto' | number | string | boolean } | { offset: number | string } | { order: 'first' | 'last' | number | string }}\n   */\n  xs?: Col\n  /**\n   * The number of columns/offset/order on small devices (<768px).\n   *\n   * @type { 'auto' | number | string | boolean | { span: 'auto' | number | string | boolean } | { offset: number | string } | { order: 'first' | 'last' | number | string }}\n   */\n  sm?: Col\n  /**\n   * The number of columns/offset/order on medium devices (<992px).\n   *\n   * @type { 'auto' | number | string | boolean | { span: 'auto' | number | string | boolean } | { offset: number | string } | { order: 'first' | 'last' | number | string }}\n   */\n  md?: Col\n  /**\n   * The number of columns/offset/order on large devices (<1200px).\n   *\n   * @type { 'auto' | number | string | boolean | { span: 'auto' | number | string | boolean } | { offset: number | string } | { order: 'first' | 'last' | number | string }}\n   */\n  lg?: Col\n  /**\n   * The number of columns/offset/order on X-Large devices (<1400px).\n   *\n   * @type { 'auto' | number | string | boolean | { span: 'auto' | number | string | boolean } | { offset: number | string } | { order: 'first' | 'last' | number | string }}\n   */\n  xl?: Col\n  /**\n   * The number of columns/offset/order on XX-Large devices (≥1400px).\n   *\n   * @type { 'auto' | number | string | boolean | { span: 'auto' | number | string | boolean } | { offset: number | string } | { order: 'first' | 'last' | number | string }}\n   */\n  xxl?: Col\n}\n\nconst BREAKPOINTS = [\n  'xxl' as const,\n  'xl' as const,\n  'lg' as const,\n  'md' as const,\n  'sm' as const,\n  'xs' as const,\n]\n\nexport const CCol = forwardRef<HTMLDivElement, CColProps>(\n  ({ children, className, ...rest }, ref) => {\n    const repsonsiveClassNames: string[] = []\n\n    BREAKPOINTS.forEach((bp) => {\n      const breakpoint = rest[bp]\n      delete rest[bp]\n\n      const infix = bp === 'xs' ? '' : `-${bp}`\n\n      if (typeof breakpoint === 'number' || typeof breakpoint === 'string') {\n        repsonsiveClassNames.push(`col${infix}-${breakpoint}`)\n      }\n\n      if (typeof breakpoint === 'boolean') {\n        repsonsiveClassNames.push(`col${infix}`)\n      }\n\n      if (breakpoint && typeof breakpoint === 'object') {\n        if (typeof breakpoint.span === 'number' || typeof breakpoint.span === 'string') {\n          repsonsiveClassNames.push(`col${infix}-${breakpoint.span}`)\n        }\n\n        if (typeof breakpoint.span === 'boolean') {\n          repsonsiveClassNames.push(`col${infix}`)\n        }\n\n        if (typeof breakpoint.order === 'number' || typeof breakpoint.order === 'string') {\n          repsonsiveClassNames.push(`order${infix}-${breakpoint.order}`)\n        }\n\n        if (typeof breakpoint.offset === 'number') {\n          repsonsiveClassNames.push(`offset${infix}-${breakpoint.offset}`)\n        }\n      }\n    })\n\n    return (\n      <div\n        className={classNames(\n          repsonsiveClassNames.length > 0 ? repsonsiveClassNames : 'col',\n          className,\n        )}\n        {...rest}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nconst span = PropTypes.oneOfType([\n  PropTypes.bool,\n  PropTypes.number,\n  PropTypes.string,\n  PropTypes.oneOf(['auto']),\n])\n\nconst col = PropTypes.oneOfType([\n  span,\n  PropTypes.shape({\n    span: span,\n    offset: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    order: PropTypes.oneOfType([\n      PropTypes.oneOf(['first', 'last']),\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  }),\n])\n\nCCol.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  xs: col,\n  sm: col,\n  md: col,\n  lg: col,\n  xl: col,\n  xxl: col,\n}\n\nCCol.displayName = 'CCol'\n","import React, { forwardRef, HTMLAttributes } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport type BPObject = {\n  cols?: 'auto' | number | string | null\n  gutter?: number | string | null\n  gutterX?: number | string | null\n  gutterY?: number | string | null\n}\n\nexport interface CRowProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The number of columns/offset/order on extra small devices (<576px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  xs?: BPObject\n  /**\n   * The number of columns/offset/order on small devices (<768px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  sm?: BPObject\n  /**\n   * The number of columns/offset/order on medium devices (<992px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  md?: BPObject\n  /**\n   * The number of columns/offset/order on large devices (<1200px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  lg?: BPObject\n  /**\n   * The number of columns/offset/order on X-Large devices (<1400px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  xl?: BPObject\n  /**\n   * The number of columns/offset/order on XX-Large devices (≥1400px).\n   *\n   * @type {{ cols: 'auto' | number | string } | { gutter: number | string } | { gutterX: number | string } | { gutterY: number | string }}\n   */\n  xxl?: BPObject\n}\n\nconst BREAKPOINTS = [\n  'xxl' as const,\n  'xl' as const,\n  'lg' as const,\n  'md' as const,\n  'sm' as const,\n  'xs' as const,\n]\n\nexport const CRow = forwardRef<HTMLDivElement, CRowProps>(\n  ({ children, className, ...rest }, ref) => {\n    const repsonsiveClassNames: string[] = []\n\n    BREAKPOINTS.forEach((bp) => {\n      const breakpoint = rest[bp]\n      delete rest[bp]\n\n      const infix = bp === 'xs' ? '' : `-${bp}`\n\n      if (typeof breakpoint === 'object') {\n        if (breakpoint.cols) {\n          repsonsiveClassNames.push(`row-cols${infix}-${breakpoint.cols}`)\n        }\n\n        if (typeof breakpoint.gutter === 'number') {\n          repsonsiveClassNames.push(`g${infix}-${breakpoint.gutter}`)\n        }\n\n        if (typeof breakpoint.gutterX === 'number') {\n          repsonsiveClassNames.push(`gx${infix}-${breakpoint.gutterX}`)\n        }\n\n        if (typeof breakpoint.gutterY === 'number') {\n          repsonsiveClassNames.push(`gy${infix}-${breakpoint.gutterY}`)\n        }\n      }\n    })\n\n    return (\n      <div className={classNames('row', repsonsiveClassNames, className)} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nconst bp = PropTypes.shape({\n  cols: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.string]),\n  gutter: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gutterX: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  gutterY: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n})\n\nCRow.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  xs: bp,\n  sm: bp,\n  md: bp,\n  lg: bp,\n  xl: bp,\n  xxl: bp,\n}\n\nCRow.displayName = 'CRow'\n","// extracted by mini-css-extract-plugin\nexport default {\"detail_page\":\"Designer_detail_page__l5lVu\",\"btn2\":\"Designer_btn2__4lZFj\",\"add_more\":\"Designer_add_more__vEcQ0\",\"col-md-6\":\"Designer_col-md-6__wZDIg\",\"row\":\"Designer_row__Q+dcQ\",\"details\":\"Designer_details__PUbvd\",\"right_page\":\"Designer_right_page__MII9S\",\"left_page\":\"Designer_left_page__snh6i\",\"section\":\"Designer_section__Gi-pp\",\"activee\":\"Designer_activee__dVqBG\",\"lab\":\"Designer_lab__wCG3p\",\"add_more_btn\":\"Designer_add_more_btn__lcLVV\",\"link\":\"Designer_link__Npzju\",\"btn1\":\"Designer_btn1__exmDn\",\"mg\":\"Designer_mg__-KzdE\",\"profile_title_heading\":\"Designer_profile_title_heading__sMYkC\",\"experience_title_heading\":\"Designer_experience_title_heading__QZTgK\",\"lb\":\"Designer_lb__-4dik\"};"],"names":["_ref","props","_jsx","_Fragment","children","_jsxs","className","styles","type","value","Myprofile","_Object$keys","obj","Profile","Kyc","Password","Logout","activeSectionKey","setActiveSectionKey","useState","Object","keys","mge","setMge","storage","setStorage","Pancard","Gst","Shop","AdharCard","storag2","setstorag2","oldpassword","newpassword","confirmpassword","storag4","setstorag4","name","email","number","address","image","State","City","Pincode","amount","handleInput","e","target","handleInput1","handleInput2","styless","profile_title_heading","mg","src","alt","width","img","InputTeg","onChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","lb","placeholder","onClick","event","preventDefault","console","log","btn1","CContainer","CRow","CCol","xs","md","CCard","unorder_list","map","item","concat","section","activee","generateBody","forwardRef","_a","ref","color","textColor","rest","__rest","React","__assign","classNames","_b","propTypes","PropTypes","colorPropType","displayName","BREAKPOINTS","repsonsiveClassNames","forEach","bp","breakpoint","infix","push","span","order","offset","length","col","sm","lg","xl","xxl","cols","gutter","gutterX","gutterY"],"sourceRoot":""}